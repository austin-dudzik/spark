/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ (() => {

eval("/*\nTemplate Name: STUDIO - Responsive Bootstrap 5 Admin Template\nVersion: 3.0.0\nAuthor: Sean Ngu\n\t----------------------------\n\t\tAPPS CONTENT TABLE\n\t----------------------------\n\n\t<!-- ======== GLOBAL SCRIPT SETTING ======== -->\n  01. Global Variable\n  02. Handle Scrollbar\n  03. Handle Sidebar Menu\n  04. Handle Sidebar Minify\n  05. Handle Sidebar Minify Float Menu\n  06. Handle Dropdown Close Option\n  07. Handle Card - Remove / Reload / Collapse / Expand\n  08. Handle Tooltip & Popover Activation\n  09. Handle Scroll to Top Button Activation\n  10. Handle hexToRgba\n  11. Handle Scroll to\n  14. Handle Enable Tooltip & Popover\n\n\t<!-- ======== APPLICATION SETTING ======== -->\n\tApplication Controller\n*/\n\n/* 01. Global Variable\n------------------------------------------------ */\nvar app = {\n  font: {},\n  color: {}\n};\n/* 02. Handle Scrollbar\n------------------------------------------------ */\n\nvar handleSlimScroll = function handleSlimScroll() {\n  \"use strict\";\n\n  $.when($('[data-scrollbar=true]').each(function () {\n    generateSlimScroll($(this));\n  })).done(function () {\n    $('[data-scrollbar=\"true\"]').mouseover();\n  });\n};\n\nvar generateSlimScroll = function generateSlimScroll(element) {\n  var isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\n  if ($(element).attr('data-init') || isMobile && $(element).attr('data-skip-mobile')) {\n    return;\n  }\n\n  var dataHeight = $(element).attr('data-height');\n  dataHeight = !dataHeight ? $(element).height() : dataHeight;\n  var scrollBarOption = {\n    height: dataHeight,\n    alwaysVisible: false\n  };\n\n  if (isMobile) {\n    $(element).css('height', dataHeight);\n    $(element).css('overflow-x', 'scroll');\n  } else {\n    $(element).slimScroll(scrollBarOption);\n    $(element).closest('.slimScrollDiv').find('.slimScrollBar').hide();\n  }\n\n  $(element).attr('data-init', true);\n};\n/* 03. Handle Sidebar Menu\n------------------------------------------------ */\n\n\nvar handleSidebarMenu = function handleSidebarMenu() {\n  \"use strict\";\n\n  $(document).on('click', '.app-sidebar .menu > .menu-item.has-sub > .menu-link', function (e) {\n    e.preventDefault();\n    var target = $(this).next('.menu-submenu');\n    var otherMenu = $('.app-sidebar .menu > .menu-item.has-sub > .menu-submenu').not(target);\n\n    if ($('.app-sidebar-minified').length === 0) {\n      $(otherMenu).slideUp(250);\n      $(otherMenu).closest('.menu-item').removeClass('expand');\n      $(target).slideToggle(250);\n      var targetElm = $(target).closest('.menu-item');\n\n      if ($(targetElm).hasClass('expand')) {\n        $(targetElm).removeClass('expand');\n      } else {\n        $(targetElm).addClass('expand');\n      }\n    }\n  });\n  $(document).on('click', '.app-sidebar .menu > .menu-item.has-sub .menu-submenu .menu-item.has-sub > .menu-link', function (e) {\n    e.preventDefault();\n\n    if ($('.app-sidebar-minified').length === 0) {\n      var target = $(this).next('.menu-submenu');\n      $(target).slideToggle(250);\n    }\n  });\n};\n/* 04. Handle Sidebar Minify\n------------------------------------------------ */\n\n\nvar MOBILE_SIDEBAR_TOGGLE_CLASS = 'app-sidebar-mobile-toggled';\nvar MOBILE_SIDEBAR_CLOSED_CLASS = 'app-sidebar-mobile-closed';\n\nvar handleSidebarMinify = function handleSidebarMinify() {\n  $('[data-toggle=\"sidebar-minify\"]').on('click', function (e) {\n    e.preventDefault();\n    var targetElm = '#app';\n    var targetClass = 'app-sidebar-minified';\n\n    if ($(targetElm).hasClass(targetClass)) {\n      $(targetElm).removeClass(targetClass);\n      localStorage.removeItem('appSidebarMinified');\n    } else {\n      $(targetElm).addClass(targetClass);\n      localStorage.setItem('appSidebarMinified', true);\n    }\n  });\n\n  if (typeof Storage !== 'undefined') {\n    if (localStorage.appSidebarMinified) {\n      $('#app').addClass('app-sidebar-minified');\n    }\n  }\n};\n\nvar handleSidebarMobileToggle = function handleSidebarMobileToggle() {\n  $(document).on('click', '[data-toggle=\"sidebar-mobile\"]', function (e) {\n    e.preventDefault();\n    var targetElm = '#app';\n    $(targetElm).removeClass(MOBILE_SIDEBAR_CLOSED_CLASS).addClass(MOBILE_SIDEBAR_TOGGLE_CLASS);\n  });\n};\n\nvar handleSidebarMobileDismiss = function handleSidebarMobileDismiss() {\n  $(document).on('click', '[data-dismiss=\"sidebar-mobile\"]', function (e) {\n    e.preventDefault();\n    var targetElm = '#app';\n    $(targetElm).removeClass(MOBILE_SIDEBAR_TOGGLE_CLASS).addClass(MOBILE_SIDEBAR_CLOSED_CLASS);\n    setTimeout(function () {\n      $(targetElm).removeClass(MOBILE_SIDEBAR_CLOSED_CLASS);\n    }, 250);\n  });\n};\n/* 05. Handle Sidebar Minify Float Menu\n------------------------------------------------ */\n\n\nvar floatSubMenuTimeout;\nvar targetFloatMenu;\n\nvar handleMouseoverFloatSubMenu = function handleMouseoverFloatSubMenu(elm) {\n  clearTimeout(floatSubMenuTimeout);\n};\n\nvar handleMouseoutFloatSubMenu = function handleMouseoutFloatSubMenu(elm) {\n  floatSubMenuTimeout = setTimeout(function () {\n    $('.app-float-submenu').remove();\n  }, 250);\n};\n\nvar handleSidebarMinifyFloatMenu = function handleSidebarMinifyFloatMenu() {\n  $(document).on('click', '.app-float-submenu .menu-item.has-sub > .menu-link', function (e) {\n    e.preventDefault();\n    var target = $(this).next('.menu-submenu');\n    $(target).slideToggle(250, function () {\n      var targetMenu = $('.app-float-submenu');\n      var targetHeight = $(targetMenu).height() + 20;\n      var targetOffset = $(targetMenu).offset();\n      var targetTop = $(targetMenu).attr('data-offset-top');\n      var windowHeight = $(window).height();\n\n      if (windowHeight - targetTop > targetHeight) {\n        $('.app-float-submenu').css({\n          'top': targetTop,\n          'bottom': 'auto',\n          'overflow': 'initial'\n        });\n      } else {\n        $('.app-float-submenu').css({\n          'bottom': 0,\n          'overflow': 'scroll'\n        });\n      }\n    });\n  });\n  $(document).on('mouseover', '.app-sidebar-minified .app-sidebar .menu .menu-item.has-sub > .menu-link', function () {\n    clearTimeout(floatSubMenuTimeout);\n    var targetMenu = $(this).closest('.menu-item').find('.menu-submenu').first();\n\n    if (targetFloatMenu == this) {\n      return false;\n    } else {\n      targetFloatMenu = this;\n    }\n\n    var targetMenuHtml = $(targetMenu).html();\n\n    if (targetMenuHtml) {\n      var targetHeight = $(targetMenu).height() + 20;\n      var targetOffset = $(this).offset();\n      var targetTop = targetOffset.top - $(window).scrollTop();\n      var targetLeft = $('body').css('direction') != 'rtl' ? $('#sidebar').width() + $('#sidebar').offset().left : 'auto';\n      var targetRight = $('body').css('direction') != 'rtl' ? 'auto' : $('#sidebar').width();\n      var windowHeight = $(window).height();\n      var submenuHeight = 0;\n\n      if ($('.app-float-submenu').length == 0) {\n        targetMenuHtml = '<div class=\"app-float-submenu\" data-offset-top=\"' + targetTop + '\" onmouseover=\"handleMouseoverFloatSubMenu(this)\" onmouseout=\"handleMouseoutFloatSubMenu(this)\">' + targetMenuHtml + '</div>';\n        $('body').append(targetMenuHtml);\n      } else {\n        $('.app-float-submenu').html(targetMenuHtml);\n      }\n\n      submenuHeight = $('.app-float-submenu').height();\n\n      if (windowHeight - targetTop > targetHeight && targetTop + submenuHeight < windowHeight) {\n        $('.app-float-submenu').css({\n          'top': targetTop,\n          'left': targetLeft,\n          'bottom': 'auto',\n          'right': targetRight\n        });\n      } else {\n        $('.app-float-submenu').css({\n          'bottom': 0,\n          'top': 'auto',\n          'left': targetLeft,\n          'right': targetRight\n        });\n      }\n    } else {\n      $('.app-float-submenu').remove();\n      targetFloatMenu = '';\n    }\n  });\n  $(document).on('mouseout', '.app-sidebar-minified .app-sidebar .menu > .menu-item.has-sub > .menu-link', function () {\n    floatSubMenuTimeout = setTimeout(function () {\n      $('.app-float-submenu').remove();\n      targetFloatMenu = '';\n    }, 250);\n  });\n};\n/* 06. Handle Dropdown Close Option\n------------------------------------------------ */\n\n\nvar handleDropdownClose = function handleDropdownClose() {\n  $(document).on('click', '[data-dropdown-close=\"false\"]', function (e) {\n    e.stopPropagation();\n  });\n};\n/* 07. Handle Card - Remove / Reload / Collapse / Expand\n------------------------------------------------ */\n\n\nvar cardActionRunning = false;\n\nvar handleCardAction = function handleCardAction() {\n  \"use strict\";\n\n  if (cardActionRunning) {\n    return false;\n  }\n\n  cardActionRunning = true; // expand\n\n  $(document).on('mouseover', '[data-toggle=card-expand]', function (e) {\n    if (!$(this).attr('data-init')) {\n      $(this).tooltip({\n        title: 'Expand / Compress',\n        placement: 'bottom',\n        trigger: 'hover',\n        container: 'body'\n      });\n      $(this).tooltip('show');\n      $(this).attr('data-init', true);\n    }\n  });\n  $(document).on('click', '[data-toggle=card-expand]', function (e) {\n    e.preventDefault();\n    var target = $(this).closest('.card');\n    var targetBody = $(target).find('.card-body');\n    var targetClass = 'card-expand';\n    var targetTop = 40;\n\n    if ($(targetBody).length !== 0) {\n      var targetOffsetTop = $(target).offset().top;\n      var targetBodyOffsetTop = $(targetBody).offset().top;\n      targetTop = targetBodyOffsetTop - targetOffsetTop;\n    }\n\n    if ($('body').hasClass(targetClass) && $(target).hasClass(targetClass)) {\n      $('body, .card').removeClass(targetClass);\n      $('.card').removeAttr('style');\n      $(targetBody).removeAttr('style');\n    } else {\n      $('body').addClass(targetClass);\n      $(this).closest('.card').addClass(targetClass);\n    }\n\n    $(window).trigger('resize');\n  });\n};\n/* 08. Handle Tooltip & Popover Activation\n------------------------------------------------ */\n\n\nvar handelTooltipPopoverActivation = function handelTooltipPopoverActivation() {\n  \"use strict\";\n\n  if ($('[data-toggle=\"tooltip\"]').length !== 0) {\n    $('[data-toggle=tooltip]').tooltip();\n  }\n\n  if ($('[data-toggle=\"popover\"]').length !== 0) {\n    $('[data-toggle=popover]').popover();\n  }\n};\n/* 09. Handle Scroll to Top Button Activation\n------------------------------------------------ */\n\n\nvar handleScrollToTopButton = function handleScrollToTopButton() {\n  \"use strict\";\n\n  $(document).on('scroll', function () {\n    var totalScroll = $(document).scrollTop();\n\n    if (totalScroll >= 200) {\n      $('[data-click=scroll-top]').addClass('show');\n    } else {\n      $('[data-click=scroll-top]').removeClass('show');\n    }\n  });\n  $('[data-click=scroll-top]').on('click', function (e) {\n    e.preventDefault();\n    $('html, body, .content').animate({\n      scrollTop: $(\"body\").offset().top\n    }, 500);\n  });\n};\n/* 10. Handle hexToRgba\n------------------------------------------------ */\n\n\nvar hexToRgba = function hexToRgba(hex) {\n  var transparent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var c;\n\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    c = hex.substring(1).split('');\n\n    if (c.length == 3) {\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n    }\n\n    c = '0x' + c.join('');\n    return 'rgba(' + [c >> 16 & 255, c >> 8 & 255, c & 255].join(',') + ',' + transparent + ')';\n  }\n\n  throw new Error('Bad Hex');\n};\n/* 11. Handle Scroll to\n------------------------------------------------ */\n\n\nvar handleScrollTo = function handleScrollTo() {\n  $(document).on('click', '[data-toggle=\"scroll-to\"]', function (e) {\n    e.preventDefault();\n    var targetElm = $(this).attr('data-target') ? $(this).attr('data-target') : $(this).attr('href');\n\n    if (targetElm) {\n      $('html, body').animate({\n        scrollTop: $(targetElm).offset().top - $('#header').height() - 24\n      }, 0);\n    }\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/app.js\n");

/***/ }),

/***/ "./resources/sass/app.scss":
/*!*********************************!*\
  !*** ./resources/sass/app.scss ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc2Fzcy9hcHAuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2Fzcy9hcHAuc2Nzcz9hODBiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/sass/app.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/app": 0,
/******/ 			"css/app": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./resources/js/app.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./resources/sass/app.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;